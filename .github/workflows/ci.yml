name: BabylonLedgerApp

on:
  push:
    branches:
      master
  pull_request:
  workflow_dispatch:
    inputs:
      name:
        description: 'Manually triggered'

env:
  CARGO_TERM_COLOR: always
  NODE_TLS_REJECT_UNAUTHORIZED: 0

jobs:
  clippy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: ["nanos", "nanox", "nanosplus"]

    steps:
      - name: arm-none-eabi-gcc
        uses: RDXWorks-actions/arm-none-eabi-gcc-action@main
        with:
          release: '12.2.Rel1'
      - name: Install toolchains
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: nightly-2023-05-28
          override: true
          components: rust-src, clippy
      - uses: RDXWorks-actions/checkout@main
      - name: Cargo clippy
        uses: RDXWorks-actions/cargo@master
        with:
          command: clippy
          args: -Z build-std=core -Z build-std-features=compiler-builtins-mem --target ./target-config/${{ matrix.target }}.json
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchains
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: nightly-2023-05-28
          override: true
          components: rust-src, rustfmt
      - uses: RDXWorks-actions/checkout@main
      - name: Cargo fmt
        uses: RDXWorks-actions/cargo@master
        with:
          command: fmt
          args: --all -- --check

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["nanos", "nanox", "nanosplus"]

    steps:
      - name: arm-none-eabi-gcc
        uses: RDXWorks-actions/arm-none-eabi-gcc-action@main
        with:
          release: '12.2.Rel1'
      - name: Install clang
        run: sudo apt-get update && sudo apt install -y clang
      - name: Install toolchains
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: nightly-2023-05-28
          override: true
          components: rust-src
      - uses: RDXWorks-actions/checkout@main
      - name: Cargo build
        uses: RDXWorks-actions/cargo@master
        with:
          command: build
          args: --release -Z build-std=core -Z build-std-features=compiler-builtins-mem --target ./target-config/${{ matrix.target }}.json
      - name: Prepare artifacts
        run: |
          mkdir -p downloads
          cp target/${{ matrix.target }}/release/babylon-ledger-app downloads/babylon_ledger_app_${{ matrix.target }}.elf
      - name: Upload artifacts
        uses: RDXWorks-actions/upload-artifact@main
        with:
          name: babylon_ledger_app_${{ matrix.target }}
          path: downloads

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install toolchains
        uses: RDXWorks-actions/toolchain@master
        with:
          toolchain: nightly-2023-05-28
          override: true
          components: rust-src
      - uses: RDXWorks-actions/checkout@main
      - name: Unit tests
        run: |
          rm -rf .cargo
          cd sbor
          cargo test
